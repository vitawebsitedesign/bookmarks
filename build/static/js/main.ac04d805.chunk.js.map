{"version":3,"sources":["components/Header.js","components/PortfolioHomeNav.js","components/PortfolioItems.js","components/PortfolioHome.js","components/PortfolioItemUrls.js","components/Tag.js","components/PortfolioItemTags.js","components/BackButton.js","components/PortfolioItem.js","selectors/portfolio-items.js","components/NotFound.js","components/App.js","reducers/portfolio-items.js","store/store.js","actions/portfolio-items.js","portfolio-items/modern-bng.js","portfolio-items/bng-campaign-xml-generator.js","portfolio-items/sql-keyword-formatter.js","portfolio-items/mint.js","portfolio-items/agile-aes.js","portfolio-items/follow-the-process.js","portfolio-items/machi-koro.js","portfolio-items/realestate-visualiser.js","portfolio-items/asx-market-capitalisation.js","serviceWorker.js","index.js"],"names":["Header","PortfolioHomeNav","href","getLink","story","idx","to","id","key","title","connect","state","items","props","map","Portfolio","React","Component","getSections","urlsByType","Object","keys","u","target","rel","PortfolioItemUrls","Tag","children","tagsByType","t","PortfolioItemTags","withRouter","onClick","history","goBack","PortfolioItem","urls","item","this","length","overview","trim","split","o","codeSnippets","url","preview","images","img","src","alt","videos","v","autoPlay","muted","loop","webm","type","mp4","youtubes","width","height","frameBorder","allow","allowFullScreen","learnt","l","itemId","match","params","find","i","NotFound","App","exact","path","component","PortfolioHome","initialState","store","createStore","action","dispatch","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac04d805.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <h1>Michael Nguyen</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst PortfolioHomeNav = () => (\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <a href=\"#bio\">Bio</a>\r\n            </li>\r\n            <li>\r\n                <a href=\"#portfolio\">Portfolio</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default PortfolioHomeNav;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getLink = (story, idx) => {\r\n    const to = `/story/${story.id}`;\r\n    return (\r\n        <li key={idx}>\r\n            <Link to={to}>{story.title}</Link>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst PortfolioItems = props => (\r\n    <div>\r\n        <ul>\r\n            {props.items.map(getLink)}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nPortfolioItems.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst mapStateToProps = state => ({ items: state });\r\nexport default connect(mapStateToProps)(PortfolioItems);\r\n","import React from 'react';\r\nimport PortfolioHomeNav from './PortfolioHomeNav';\r\nimport PortfolioItems from './PortfolioItems';\r\n\r\nexport default class Portfolio extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <PortfolioHomeNav />\r\n                <main>\r\n                    <section>\r\n                        <h2>Bio</h2>\r\n                        <p>\r\n                            Michael is a Sydney Software Engineer with an unhealthy obsession with all things tech.<br />\r\n                            He has an unhealthy obsession with reading about the minimisation of software project risks.\r\n                        </p>\r\n                        <p>\r\n                            As a full-stack dev, it is fantastic to understand in detail how all software components connect together &amp; synergize them to deliver great products.<br />\r\n                            Having exposure to very early releases of AngularJS &amp; ReactJS has resulted in a plotglot front-end framework background.<br />\r\n                            The pragmatic application of strong programming practices are prioritized, since those will always have a direct effect on end products, &amp; persist even as software technologies change over time.\r\n                        </p>\r\n                        <p>\r\n                            Feel free to check out some of his personal projects below, which were undertaken during free time.\r\n                        </p>\r\n                    </section>\r\n                    <section>\r\n                        <h2>Portfolio</h2>\r\n                        <p>\r\n                            This list covers personal programming projects undertaken after university graduation.<br />\r\n                            Prior &amp; during university, many projects were created such as algorithmic trading software, mathematical formula algorithms &amp; GML video games.<br />\r\n                            Feel free to check out the certifications &amp; additional work pieces listed on Michael&rsquo;s resume, which complement the list below.\r\n                        </p>\r\n                        <PortfolioItems />\r\n                    </section>\r\n                </main>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getAnchorListItems = urls => urls.map((u, idx) =>\r\n    <li key={idx}>\r\n        <a href={u} target=\"_blank\" rel=\"noopener noreferrer\" title=\"click to open this external link in a new tab\">\r\n            {u}\r\n        </a>\r\n    </li>\r\n);\r\n\r\nconst getSections = urlsByType => Object.keys(urlsByType).map(title =>\r\n    <section key={title}>\r\n        <p>{title}:</p>\r\n        <ul>\r\n            {getAnchorListItems(urlsByType[title])}\r\n        </ul>\r\n    </section>\r\n);\r\n\r\nconst PortfolioItemUrls = props => (\r\n    <div>\r\n        {props.urlsByType && getSections(props.urlsByType)}\r\n    </div>\r\n);\r\n\r\nPortfolioItemUrls.propTypes = {\r\n    urlsByType: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string))\r\n};\r\n\r\nexport default PortfolioItemUrls;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Tag = props => (<span>{props.children}</span>);\r\n\r\nTag.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tag from './Tag';\r\n\r\nconst getTagListItems = tags => tags.map((t, idx) =>\r\n    <li key={idx}>\r\n        <Tag>{t}</Tag>\r\n    </li>\r\n);\r\n\r\nconst getSections = tagsByType => Object.keys(tagsByType).map(title => getTagListItems(tagsByType[title]));\r\n\r\nconst PortfolioItemTags = props => (\r\n    <div>\r\n        {props.tagsByType && getSections(props.tagsByType)}\r\n    </div>\r\n);\r\n\r\nPortfolioItemTags.propTypes = {\r\n    tagsByType: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string))\r\n};\r\n\r\nexport default PortfolioItemTags;\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst BackButton = props => <button onClick={() => props.history.goBack()}>back</button>;\r\n\r\nexport default withRouter(BackButton);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PortfolioItemUrls from './PortfolioItemUrls';\r\nimport PortfolioItemTags from './PortfolioItemTags';\r\nimport BackButton from './BackButton';\r\nimport {getPortfolioItem} from '../selectors/portfolio-items';\r\nimport Gist from 'super-react-gist';\r\n\r\nconst getOverviewParagraphs = overview => overview.trim().split('\\n').map((o, idx) => \r\n    <p key={idx}>\r\n        {o}\r\n    </p>\r\n);\r\n\r\nconst getLearntListItems = learnt => learnt.map((l, idx) => \r\n    <li key={idx}>\r\n        {l}\r\n    </li>\r\n);\r\n\r\nconst getPreviewImgs = imgs => imgs.map((img, idx) => \r\n    <figure key={idx}>\r\n        <img src={img.src} alt={img.alt} />\r\n        <figcaption>{img.alt}</figcaption>\r\n    </figure>\r\n);\r\n\r\nconst getPreviewVids = vids => vids.map((v, idx) =>\r\n    <video key={idx} autoPlay muted loop>\r\n        <source src={v.webm} type=\"video/webm\" />\r\n        <source src={v.mp4} type=\"video/mp4\" />\r\n        <p>\r\n            A preview video is not being shown because your browser doesn't support HTML5 video.\r\n        </p>\r\n    </video>\r\n);\r\n\r\nconst getPreviewYoutube = youtubes => youtubes.map((url, idx) =>\r\n    <iframe\r\n        key={idx}\r\n        src={url}\r\n        title={`Embedded youtube video for ${url}`}\r\n        width=\"560\"\r\n        height=\"315\"\r\n        frameBorder=\"0\"\r\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen\r\n    />\r\n);\r\n\r\nconst getEmbeddedCodeSnippets = urls => urls && urls.map((u, idx) => \r\n    <Gist key={idx} url={u} />\r\n);\r\n\r\nclass PortfolioItem extends React.Component {\r\n    render() {\r\n        const item = this.props.item;\r\n\r\n        return (\r\n            <article>\r\n                <nav>\r\n                    <BackButton />\r\n                </nav>\r\n                <header>\r\n                    <h2>{item.title}</h2>\r\n                </header>\r\n                {item.tagsByType && Object.keys(item.tagsByType).length && (\r\n                    <section>\r\n                        <ul>\r\n                            <PortfolioItemTags tagsByType={item.tagsByType} />\r\n                        </ul>\r\n                    </section>\r\n                )}\r\n                <section>\r\n                    {getOverviewParagraphs(item.overview)}\r\n                    {getEmbeddedCodeSnippets(item.codeSnippets)}\r\n                </section>\r\n                <section>\r\n                    {item.preview.images && getPreviewImgs(item.preview.images)}\r\n                    {item.preview.videos && getPreviewVids(item.preview.videos)}\r\n                    {item.preview.youtubes && getPreviewYoutube(item.preview.youtubes)}\r\n                </section>\r\n                <section>\r\n                    <p>Developing this code built my character through the learning of:</p>\r\n                    <ul>\r\n                        {getLearntListItems(item.learnt)}\r\n                    </ul>\r\n                </section>\r\n                {item.urlsByType && Object.keys(item.urlsByType).length && (\r\n                    <section>\r\n                        <PortfolioItemUrls urlsByType={item.urlsByType} />\r\n                    </section>\r\n                )}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nPortfolioItem.propTypes = {\r\n    item: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    item: getPortfolioItem(state, props.match.params.id)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PortfolioItem);\r\n","export const getPortfolioItem = (items, itemId) => items.find(i => i.id === itemId);\r\n","import React from 'react';\r\nimport BackButton from './BackButton';\r\n\r\nconst NotFound = () => (\r\n    <>\r\n        <nav>\r\n            <BackButton />\r\n        </nav>\r\n        <p>404: Not found</p>;\r\n    </>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport PortfolioHome from './PortfolioHome';\r\nimport PortfolioItem from './PortfolioItem';\r\nimport NotFound from './NotFound';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\nconst App = () => (\r\n    <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n            <Route exact path={['/story/:id', '/bookmarks/build/story/:id']} component={PortfolioItem} />\r\n            <Route exact path={['/', '/bookmarks/build/']} component={PortfolioHome} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","const initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_PORTFOLIO_ITEMS':\r\n            return [...state, ...action.items];\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n","import {createStore} from 'redux';\r\nimport {addPortfolioItems} from '../actions/portfolio-items';\r\nimport AgileAES from '../portfolio-items/agile-aes';\r\nimport AsxMarketCapitalisation from '../portfolio-items/asx-market-capitalisation';\r\nimport BngCampaignXmlGenerator from '../portfolio-items/bng-campaign-xml-generator';\r\nimport FollowTheProcess from '../portfolio-items/follow-the-process';\r\nimport MachiKoro from '../portfolio-items/machi-koro';\r\nimport Mint from '../portfolio-items/mint';\r\nimport ModernBng from '../portfolio-items/modern-bng';\r\nimport RealestateVisualiser from '../portfolio-items/realestate-visualiser';\r\nimport SqlKeywordFormatter from '../portfolio-items/sql-keyword-formatter.js';\r\nimport portfolioItems from '../reducers/portfolio-items';\r\n\r\nconst store = createStore(portfolioItems);\r\nstore.dispatch(addPortfolioItems([\r\n    ModernBng,\r\n    BngCampaignXmlGenerator,\r\n    SqlKeywordFormatter,\r\n    Mint,\r\n    AgileAES,\r\n    FollowTheProcess,\r\n    MachiKoro,\r\n    RealestateVisualiser,\r\n    AsxMarketCapitalisation\r\n]));\r\n\r\nexport default store;\r\n","export const addPortfolioItems = (items) => ({\r\n    type: 'ADD_PORTFOLIO_ITEMS',\r\n    items\r\n});\r\n","export default {\r\n    \"id\": \"modern-bng\",\r\n    \"title\": \"Modern BNG\",\r\n    \"tagsByType\": {\r\n        \"product\": [\"Open source\", \"API integration\"],\r\n        \"programming\": [\"C#\", \".NET\", \"Unity API\", \"BNG API\"]\r\n    },\r\n    \"overview\": `\r\nBNG is a Steam product with retro-style aeshtetics.\r\nModern shader & lighting techniques are not supported out-of-the-box, however it does support API integrations with Unity.\r\nEnabling modern graphics using a C# mod integration enabled aesthetics not seen before inside the product.\r\nHence, \"Modern BNG\" is a C# mod that enables this & enables never-seen-before BNG aesthetics.\r\n    `,\r\n    \"preview\": {\r\n        \"images\": [\r\n            {\r\n                \"src\": \"https://i.imgur.com/CRsGOBp.jpg\",\r\n                \"alt\": \"Development of the modern BNG mod: graphical comparison between Unity camera & in-game screencap\"\r\n            }\r\n        ],\r\n        \"videos\": [\r\n            {\r\n                \"webm\": \"https://giant.gfycat.com/OptimisticBaggyAplomadofalcon.webm\",\r\n                \"mp4\": \"https://thumbs.gfycat.com/OptimisticBaggyAplomadofalcon-mobile.mp4\"\r\n            }\r\n        ],\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/82804a855c355ec896d7a704479edcc5\",\r\n        \"https://gist.github.com/vitawebsitedesign/aa7404a287b1704764edb1a511e357d7\"\r\n    ],\r\n    \"learnt\": [\r\n        \"Programatically applying Physically Based Shading via Unity Standard Shader\",\r\n        \"Thirty-party API integrations\",\r\n        \"Collaboration with like-minded programmers\"\r\n    ],\r\n    \"urlsByType\": {\r\n        \"source code\": [\r\n            \"https://github.com/vitawebsitedesign/modern-bng\"\r\n        ],\r\n        \"demonstration\": [\r\n            \"https://i.imgur.com/1TUDJNb.mp4\"\r\n        ]\r\n    }\r\n};\r\n","export default {\r\n    \"id\": \"bng-campaign-xml-generator\",\r\n    \"title\": \"BNG Campaign XML Generator\",\r\n    \"tagsByType\": {\r\n        \"product\": [\"Open source\", \"Code Pen\"],\r\n        \"programming\": [\"XML\", \"Selenium\", \"Webpack\", \"jQuery\", \"Bootstrap\"]\r\n    },\r\n    \"overview\": `\r\nBallisticNG is a Steam product that enables consumers to integrate using hand-written XML files.\r\nHand writing XML filess is error prone & unproductive.\r\nHence, a tool with a user-friendly UI to automatically generate their necessary XML is quite valuable.\r\nFor maximal access, this tool is hosted as a simple CodePen, which was made possible through Webpack.\r\n    `,\r\n    \"preview\": {\r\n        \"videos\": [\r\n            {\r\n                \"webm\": \"https://giant.gfycat.com/UncommonWhoppingDingo.webm\",\r\n                \"mp4\": \"https://i.imgur.com/zoelx9G.mp4\"\r\n            }\r\n        ],\r\n        \"images\": [\r\n            {\r\n                \"src\": \"https://i.imgur.com/JXqOUC4.jpg\",\r\n                \"alt\": \"The BNG Campaign XML Generator interface\"\r\n            }\r\n        ]\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/b0c9a04e5139a5839874670dfaba23f1\",\r\n        \"https://gist.github.com/vitawebsitedesign/b1a90b42ddac1383fc9e2988d9f1bd90\"\r\n    ],\r\n    \"learnt\": [\r\n        \"The third party XML formats required for successful integration\",\r\n        \"The Bootstrap components & configuration of webpack bundles\",\r\n        \"The Selenium WebDriver interface\"\r\n    ],\r\n    \"urlsByType\": {\r\n        \"source code\": [\r\n            \"https://github.com/vitawebsitedesign/bng-campaign-xml-generator\"\r\n        ],\r\n        \"product\": [\r\n            \"https://codepen.io/thinkfast2008/full/vvKKwq\"\r\n        ],\r\n        \"mentioned in documentation\": [\r\n            \"https://ballisticng.gamepedia.com/Custom_Campaign_XML\"\r\n        ]\r\n    }\r\n};\r\n","export default {\r\n    \"id\": \"sql-keyword-formatter\",\r\n    \"title\": \"SQL Keyword Formatter\",\r\n    \"tagsByType\": {\r\n        \"product\": [\"Open source\", \"Microsoft Store\"],\r\n        \"programming\": [\"C#\", \"UWP\", \"T-SQL\", \"Regex\"]\r\n    },\r\n    \"overview\": `\r\nIn ASP.NET architectures, raw T-SQL is often used as an alternative to Entity Framework statements (Dapper/ADO.NET).\r\nWhen it comes to bulk operations, raw SQL offers a scalable & performant option for database operations.\r\n\r\nHowever raw T-SQL casing can sometimes be mixed up. Some developers prefer an \"all lowercase\" format for T-SQL.\r\nLater on, they may decide that the more traditional \"uppercase keyword\" formatting is more readable.\r\n\r\nSQL Keyword Formatter is a modern UWP Windows app that allows a developer to move to the later keyword format.\r\nSpecifically, one can now just copy & paste an entire T-SQL snippet, and immediately retrieve the functional equivalent in the later format.\r\nThe significant productivity boost enabled by this app proves valuable.\r\n    `,\r\n    \"preview\": {\r\n        \"images\": [\r\n            {\r\n                \"src\": \"https://i.imgur.com/myxwbeK.jpg\",\r\n                \"alt\": \"Example #1 of the SQL Keyword Formatter in action\"\r\n            },\r\n            {\r\n                \"src\": \"https://i.imgur.com/WxfoIFD.jpg\",\r\n                \"alt\": \"Example #2 of the SQL Keyword Formatter in action\"\r\n            }\r\n        ]\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/a4bc1a4004d88dfe34c5daab3bb9dfbe\",\r\n        \"https://gist.github.com/vitawebsitedesign/b9ff00fc48308aa5f7c678bc970834d7\"\r\n    ],\r\n    \"learnt\": [\r\n        \"The different scenarios T-SQL keywords may be used in, then translating those into regex patterns\",\r\n        \"Thorough use of fixtures in automated parallelable nUnit tests to minimize regressions\",\r\n        \"How to develop with the UWP framework & passing auditing to enable publishing to the Microsoft Store\"\r\n    ],\r\n    \"urlsByType\": {\r\n        \"source code\": [\r\n            \"https://github.com/vitawebsitedesign/sql-keyword-formatter\"\r\n        ],\r\n        \"product\": [\r\n            \"https://www.microsoft.com/en-au/p/sql-keyword-formatter/9mv09gl7hrt1?cid=msft_web_chart&activetab=pivot:overviewtab\"\r\n        ]\r\n    }\r\n};\r\n","export default {\r\n    \"id\": \"mint\",\r\n    \"title\": \"Mint\",\r\n    \"tagsByType\": {\r\n        \"product\": [\"Open source\", \"API integration\"],\r\n        \"programming\": [\"Lua\", \"ReactJS\", \"Bootstrap\"]\r\n    },\r\n    \"overview\": `\r\nIn 2004, Blizzard Entertainment released World of Warcraft.\r\nOne of their features is an internal auction house system comprised of real bidders & sellers to determine prices.\r\nLike the real world, asset demand can periodicically fluctuate & cause temporary underpricing.\r\nData mining & deriving calculated information for this would allow one to take advantage of such situations.\r\nHence, \"Mint\" is a valuable suite to achieve this.\r\n\r\nCalculations work by diffing 2 datafiles and calculating the difference depending on the amount to be purchased.\r\nLua integration for datamining, ES6 for calculations, & ReactJS for responsive UI's\r\n    `,\r\n    \"preview\": {\r\n        \"youtubes\": [\r\n            \"https://www.youtube.com/embed/En_9xQfm8Cg\"\r\n        ],\r\n        \"videos\": [\r\n            {\r\n                \"webm\": \"https://giant.gfycat.com/AdeptBlaringAmazondolphin.webm\",\r\n                \"mp4\": \"https://thumbs.gfycat.com/AdeptBlaringAmazondolphin-mobile.mp4\"\r\n            }\r\n        ],\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/36e7fc168dfbf0c9c520b65ddd4e8b81\",\r\n        \"https://gist.github.com/vitawebsitedesign/e21a49f7c3d2e4719a333994715f4ff7\",\r\n        \"https://gist.github.com/vitawebsitedesign/ed799abf3a34f23f7b45bd4e788acb75\",\r\n        \"https://gist.github.com/vitawebsitedesign/18f44ec2e9542e9cb7b2e5a6012a0e11\",\r\n        \"https://gist.github.com/vitawebsitedesign/5d0231ddcc5dc665ef9a3c3a76fd826e\",\r\n        \"https://gist.github.com/vitawebsitedesign/a2dcb6ca0e1510393fe5421b16b7952e\"\r\n    ],\r\n    \"learnt\": [\r\n        \"Learning the Lua programming language\",\r\n        \"Integrating a third-party API\",\r\n        \"Applying the Psuedo Programming Process to translate requirements into reality\",\r\n        \"Replicating computer interaction through user32.dll\"\r\n    ],\r\n    \"urlsByType\": {\r\n        \"source code\": [\r\n            \"https://github.com/vitawebsitedesign/mint\",\r\n            \"https://github.com/vitawebsitedesign/mint-web-suite\",\r\n            \"https://github.com/vitawebsitedesign/mint-button-masher\"\r\n        ],\r\n        \"demo in-action (timelapsed)\": [\r\n            \"https://www.youtube.com/watch?v=En_9xQfm8Cg\"\r\n        ]\r\n    }\r\n};\r\n","export default {\r\n\t\"id\": \"agile-aes\",\r\n\t\"title\": \"AgileAES & SecureStringCharacters\",\r\n\t\"tagsByType\": {\r\n\t\t\"product\": [\"Open source\", \"Encryption\", \"Nuget\"],\r\n\t\t\"programming\": [\"C#\", \".NET Standard\"]\r\n\t},\r\n\t\"overview\": `\r\n.NET provides AES encryption functionality to developers, but usage involves a large code footprint.\r\nThus, a library that delivers the same functionality with lesser footprint via abstraction would be incredibly valueable.\r\nDevelopers no longer need to know exact encyrption implementation details, and allows them to perform the same functionality in a stateless manner.\r\nHence, AgileAES is a library that brings AES encryption functionality using a series of 1-liners.\r\n    `,\r\n    \"preview\": {\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/64e4721caca03209cc2c4052f67f293d\",\r\n        \"https://gist.github.com/vitawebsitedesign/d2d0a104cfdd10e906f4c802b2742d17\"\r\n    ],\r\n\t\"learnt\": [\r\n\t\t\"The usage of the System.Security.Cryptography.Aes class\",\r\n\t\t\"The semantics between MemoryStream, CryptoStream & StreamWriter to ensure operation scalability.\",\r\n\t\t\"The .NET SecureString security limitations. Specifically, how contents are protected in memory across different platforms\"\r\n    ],\r\n\t\"urlsByType\": {\r\n\t\t\"source code\": [\r\n\t\t\t\"https://github.com/vitawebsitedesign/AgileAES\",\r\n\t\t\t\"https://github.com/vitawebsitedesign/SecureStringCharacters\"\r\n\t\t],\r\n\t\t\"product\": [\r\n\t\t\t\"https://www.nuget.org/packages/MichaelNguyen.AgileAES/\",\r\n\t\t\t\"https://www.nuget.org/packages/MichaelNguyen.Utility.SecureStringCharacters/\"\r\n\t\t]\r\n\t}\r\n};\r\n","export default {\r\n    \"id\": \"follow-the-process\",\r\n    \"title\": \"Follow the process\",\r\n    \"tagsByType\": {\r\n        \"product\": [\"Windows Mobile SDK\", \"C#\"]\r\n    },\r\n    \"overview\": `\r\nThe Australian Stock Exchange (ASX) allows investors to invest in equities.\r\nAs business conditions change on a daily basis, new attracting investing opportunities may open up.\r\nThe window to enter, may however, be small.\r\nHence, a compact mobile app to view, navigate & analyze these daily opportunities would be quite valuable.\r\nThis app was used on a daily basis, during bus & train transport to & from work.\r\n    `,\r\n    \"preview\": {\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/239e8afad27f0cac95dec06d362d1c59\",\r\n        \"https://gist.github.com/vitawebsitedesign/79d2fbaae0eed6e01b64e9df0a925b53\",\r\n        \"https://gist.github.com/vitawebsitedesign/a14c9b325df3860d80c08375e071fe00\",\r\n        \"https://gist.github.com/vitawebsitedesign/0d35573a3b8ed97fc34274c7b6793597\"\r\n    ],\r\n    \"learnt\": [\r\n        \"The Windows Mobile SDK\",\r\n        \"App development for the small Microsoft Lumia mobile screen real estate\",\r\n        \"Reverse-engineering the BigCharts MarketWatch graph endpoint to display candlestick charts\"\r\n    ],\r\n    \"urlsByType\": {\r\n        \"source code\": [\r\n            \"https://github.com/vitawebsitedesign/follow-the-process\"\r\n        ]\r\n    }\r\n};\r\n","export default {\r\n    \"id\": \"machi-koro\",\r\n    \"title\": \"Machi Koro\",\r\n    \"tagsByType\": {\r\n        \"product\": [\"Open source\"],\r\n        \"programming\": [\"ReactJS\", \"Bootstrap\"]\r\n    },\r\n    \"overview\": `\r\n\"Machi Koro\" is a fun physical board game.\r\nI had a craving to play a digital version of this game online, but there was no decent one available at the time.\r\nThis is a ReactJS implementation of the entertaining board game.\r\nMany hours were enjoyed both implementing & playing.\r\n    `,\r\n    \"preview\": {\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/fde717ca33d323b4d7699e58a41593ab\",\r\n        \"https://gist.github.com/vitawebsitedesign/9449ccecfad9dbdc1ce414854d8a9940\"\r\n    ],\r\n    \"learnt\": [\r\n        \"Constructing reusable & agnostic ReactJS components\",\r\n        \"Translating mechanics into rules through ES6\"\r\n    ],\r\n    \"urlsByType\": {\r\n        \"source code\": [\r\n            \"https://github.com/vitawebsitedesign/machi-koroooooooo\"\r\n        ]\r\n    }\r\n};\r\n","export default {\r\n    \"id\": \"rea-crawler-and-visualizer\",\r\n    \"title\": \"Realestate.com.au website crawler & visualizer\",\r\n    \"tagsByType\": {\r\n        \"product\": [\"Realestate.com.au\", \"Data scraping\", \"Data post-processing\", \"API integration\"],\r\n        \"programming\": [\"Google Maps API\", \"PHP\"]\r\n    },\r\n    \"overview\": `\r\nRealestate.com.au is a website that advertises rental opportunities for tenants.\r\nIn early 2017, the website did not yet have a feature to visualize rent locations on a map.\r\nRather, listings only displayed an address, & users had to manually calculate the distance to-and-from key locations.\r\nVisualisation through an interactive & filterable map would prove extremely valuable in allowing tenants to find listings best for them.\r\nHence, a web suite was created that:\r\n• Data scraped listings from REA HTML webpages\r\n• Post-processed HTML data into JSON through Regex\r\n• PHP endpoints to deliver JSON data to a responsive user interface\r\n    `,\r\n    \"preview\": {\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/415a9b4fbf631eb21690cd18d4f1f238\",\r\n        \"https://gist.github.com/vitawebsitedesign/fff9e3c8cb22410c5b15a78e2c10411d\"\r\n    ],\r\n    \"learnt\": [\r\n        \"Developing a PHP web crawler to fetch raw data\",\r\n        \"Determining Regex patterns to extract key information from large raw HTML webpages\",\r\n        \"Integrating with the Google Maps API\"\r\n    ],\r\n    \"urlsByType\": {\r\n        \"source code\": [\r\n            \"https://github.com/vitawebsitedesign/real-estate-website-crawler\"\r\n        ]\r\n    }\r\n};\r\n","export default {\r\n    \"id\": \"asx-market-capitalisation\",\r\n    \"title\": \"ASX market capitalisation\",\r\n    \"tagsByType\": {\r\n        \"product\": [\"Open source\", \"ASX API\"],\r\n        \"programming\": [\"ReactJS\", \"Bootstrap\", \"jQuery AJAX\"]\r\n    },\r\n    \"overview\": `\r\nThe Australian Stock Exchange (ASX) displays company investor information.\r\nA long time ago, their website became very outdated.\r\nFor some reason, there wasn't an easy & quick way to view business market capitalisation amounts.\r\nA website that can quickly fetch market capitalisations by company ticker through the ASX API, would be productive & valuable.\r\n    `,\r\n    \"preview\": {\r\n    },\r\n    \"codeSnippets\": [\r\n        \"https://gist.github.com/vitawebsitedesign/cdb4c7b6c84f1ba34a0ed7c8f9336d4e\",\r\n        \"https://gist.github.com/vitawebsitedesign/132316eb386d7e5dbb102005f70f425b\"\r\n    ],\r\n    \"learnt\": [\r\n        \"The reverse-engineering the ASX API endpoint URL & request parameters\",\r\n        \"Leveraging Bootstrap to productively deliver responsive user interfaces\"\r\n    ],\r\n    \"urlsByType\": {\r\n        \"source code\": [\r\n            \"https://github.com/vitawebsitedesign/market-cap\"\r\n        ]\r\n    }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport store from './store/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}